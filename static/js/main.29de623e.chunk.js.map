{"version":3,"sources":["utils/getImageSrcFromStates.ts","components/Altar/Altar.tsx","components/AltarCreator/AltarCreator.tsx","containers/App/App.tsx","index.tsx"],"names":["baseExtensionsUrl","process","getImageSrcFromStates","stateName","Altar","name","soporte","width","buda","iluminacion","imagePisoSrc","imageSoporteSrc","imageBudaSrc","imageiluminacionSrc","className","src","alt","AltarCreator","React","useState","altar","setAltar","style","display","type","min","max","value","onChange","event","prev","parseInt","target","onClick","App","basename","to","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29de623e.chunk.js","sourcesContent":["    const baseExtensionsUrl = `${process.env.PUBLIC_URL}/images/Altar/`;\r\n    \r\n\r\n    export const getImageSrcFromStates = (stateName: string = '') => {\r\n\r\n    switch(stateName) {\r\n      case 'suelo':\r\n        return `${baseExtensionsUrl}Suelo/suelo.png`;\r\n      case 'soporte':\r\n        return `${baseExtensionsUrl}Soporte/soporte1.png`;\r\n      case 'soporte2':\r\n        return`${baseExtensionsUrl}Soporte/soporte2.png`;\r\n      case 'buda':\r\n        return`${baseExtensionsUrl}Buda/buda.png`;\r\n      case 'buda2':\r\n        return`${baseExtensionsUrl}Buda/buda2.png`;\r\n\r\n      case 'iluminacion1':\r\n        return`${baseExtensionsUrl}iluminacion/iluminacion1.png`;\r\n\r\n        case 'iluminacion2':\r\n          return`${baseExtensionsUrl}iluminacion/iluminacion2.png`;\r\n        \r\n    \r\n     // default:\r\n        //return `${baseExtensionsUrl}`;\r\n    }\r\n  }","\r\nimport  React from 'react';\r\nimport { getImageSrcFromStates } from '../../utils/getImageSrcFromStates';\r\nimport './Altar.css';\r\n\r\nexport interface AltarProps{\r\n    name:string;\r\n    pared?:string;\r\n    soporte?:string;\r\n    buda?:string;\r\n    vela?:string;\r\n    planta?:string;\r\n    iluminacion?:string;\r\n    width: number;\r\n\r\n}\r\n\r\nexport const Altar : React.FC<AltarProps>=({name, soporte, width,buda, iluminacion})=>{\r\n\r\n    const imagePisoSrc = getImageSrcFromStates(\"suelo\")\r\n    const imageSoporteSrc = getImageSrcFromStates(soporte)\r\n    const imageBudaSrc = getImageSrcFromStates(buda)\r\n    const imageiluminacionSrc = getImageSrcFromStates(iluminacion)\r\n    const ancho = width;\r\n\r\n\r\n    return (<div className=\"\">\r\n\r\n\r\n\r\n    <h1>{name}</h1>\r\n\r\n    <img className={soporte} width={width} src={imageSoporteSrc} alt=\"\"/>\r\n    <img className=\"piso\" src={imagePisoSrc} alt=\"\"/> \r\n    <img className={buda} src={imageBudaSrc} alt=\"\"/> \r\n    <img className={iluminacion} src={imageiluminacionSrc} alt=\"\"/> \r\n\r\n    </div>\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport { Altar, AltarProps } from \"../Altar/Altar\";\r\nimport './AltarCreator.css';\r\n\r\ninterface AltarCreatorProps{\r\n\r\n}\r\n\r\nexport const AltarCreator: React.FC<AltarCreatorProps> =() => {\r\n\r\n    const [altar, setAltar] = React.useState<AltarProps>({\r\n        name:\" \",\r\n        width: 400,\r\n        soporte:\"soporte\",\r\n        buda:\" \",\r\n        iluminacion: \" \",\r\n\r\n    });\r\n\r\n\r\n    const handleWitdhChange=(event:React.ChangeEvent<HTMLInputElement>)=>{\r\n        setAltar((prev)=> ({\r\n            ...prev,\r\n            width: parseInt(event.target.value)\r\n        }));\r\n\r\n    }\r\n\r\n    const handleSoporte1Change = (event:any)=>{\r\n        setAltar((prev)=> ({\r\n            ...prev,\r\n            soporte: \"soporte\"\r\n        }));\r\n\r\n    }\r\n\r\n    const handleSoporte2Change = (event:any)=>{\r\n        setAltar((prev)=> ({\r\n            ...prev,\r\n            soporte: \"soporte2\"\r\n        }));\r\n\r\n    }\r\n    const handleBuda1Change = (event:any)=>{\r\n        setAltar((prev)=> ({\r\n            ...prev,\r\n            buda: \"buda\"\r\n        }));\r\n\r\n    }\r\n    const handleBuda2Change = (event:any)=>{\r\n        setAltar((prev)=> ({\r\n            ...prev,\r\n            buda: \"buda2\"\r\n        }));\r\n\r\n    }\r\n\r\n    const handleIluminacion1Change = (event:any)=>{\r\n        setAltar((prev)=> ({\r\n            ...prev,\r\n            iluminacion: \"iluminacion1\"\r\n        }));\r\n\r\n    }\r\n\r\n    const handleIluminacion2Change = (event:any)=>{\r\n        setAltar((prev)=> ({\r\n            ...prev,\r\n            iluminacion: \"iluminacion2\"\r\n        }));\r\n\r\n    }\r\n    \r\n\r\n    return <div className=\"background\">\r\n\r\n        <div className =\"Altar\"> \r\n        <Altar\r\n            name=\"Altar de meditaciÃ³n\"\r\n            width ={altar.width}\r\n            soporte={altar.soporte}\r\n            buda={altar.buda}\r\n            iluminacion={altar.iluminacion}\r\n            \r\n        />\r\n        </div>\r\n\r\n\r\n    <div className=\"Settings\">\r\n\r\n        <label style={{display:'block'}}>\r\n            Ancho\r\n            <input type=\"range\" min={400} max={500} value={altar.width} onChange={handleWitdhChange} />\r\n        </label>\r\n\r\n        <button onClick={handleSoporte1Change}>\r\n            <img src=\"\" alt=\"\" />\r\n            soporte1\r\n        </button>\r\n\r\n        <button onClick={handleSoporte2Change}>\r\n            soporte2\r\n        </button>\r\n\r\n        <button onClick={handleBuda1Change}>\r\n            buda1\r\n        </button>\r\n        <button onClick={handleBuda2Change}>\r\n            buda2\r\n        </button>\r\n\r\n        <button onClick={handleIluminacion1Change}>\r\n            Iluminacion1\r\n        </button>\r\n\r\n        <button onClick={handleIluminacion2Change}>\r\n            iluminacion2\r\n        </button>\r\n\r\n\r\n    </div>\r\n\r\n        \r\n\r\n\r\n\r\n    </div>;\r\n}","import React from 'react';\r\nimport { Altar } from '../../components/Altar/Altar';\r\nimport { Settings } from '../../components/Settings/Settings';\r\nimport './App.css';\r\nimport{ HashRouter, Link, Route }  from 'react-router-dom';\r\nimport { AltarCreator } from '../../components/AltarCreator/AltarCreator';\r\n\r\n/*\r\nconst initialAltar =[ { \r\n    id: 'id',\r\n    name: 'suelo',\r\n    pared: 'pared',\r\n    soporte: 'soporte',\r\n    buda: 'buda',\r\n    vela: 'vela',\r\n    planta :'planta',\r\n    iluminacion: 'iluminacion',\r\n    width:100,\r\n}]\r\n\r\n*/\r\nexport const App =()=>{\r\n\r\n    \r\n\r\n    return(    \r\n\r\n    <body >\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n\r\n            <Link to=\"/home\">Ir al Home </Link>\r\n            <Link to=\"/second\">Ir al second </Link>\r\n\r\n            <Route path=\"/home\" render={()=> <h1> home </h1>}/>\r\n            <Route path=\"/second\" render={()=> {\r\n\r\n\r\n            return <main>\r\n\r\n                <AltarCreator/>\r\n\r\n            </main>\r\n        }}/>\r\n        \r\n\r\n        </HashRouter>\r\n    </body>);\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './containers/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}